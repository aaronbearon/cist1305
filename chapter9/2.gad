// Since array sizes can't be changed, these constants can also be global constants.
// Therefore, these constants don't have to be passed as arguments to modules or functions.
Constant Integer ROWS = 7
Constant Integer COLS = 7

Constant Integer MAX = 9
// These are the numbers for printing the reference table.
Constant String digits = "0123456789"

Module main()
	Declare Integer values[ROWS][COLS]
	Call initTable(values)
	// This displays the reference table.
	// The table won't look right with multi-digit numbers.
	If MAX < 10 Then
		Call debugPrintTable(values)
	End If
	Call printSaddlePoints(values)
End Module

Module initTable(Integer Ref values[][])
	Declare Integer row, col
	For row = 0 To ROWS - 1
		For col = 0 To COLS - 1
			Set values[row][col] = random(0, MAX)
		End For
	End For
End Module

Module printSaddlePoints(Integer values[][])
	Declare Integer row, col = 0
	Display
	Display "Here are the following saddle points:"
	Declare Boolean found = False
	// Loop to display the saddle points (if any).
	For row = 0 To ROWS - 1
		For col = 0 To COLS - 1
			If isSaddlePoint(values, row, col) Then
				Display "Found (Row ", row + 1, ", Column ", col + 1, ") = ", values[row][col]
				Set found = True
			End If
		End For
	End For
	If NOT found Then
		Display "None found!"
	End If
End Module

Function Boolean isSaddlePoint(Integer values[][], Integer row, Integer col)
	// Just checking that the value is both the lowest in the row and the highest in the column.
	Declare Integer val = values[row][col]
	Return val == lowestInRow(values, row) AND val == highestInColumn(values, col)
End Function

Function Integer lowestInRow(Integer values[][], Integer row)
	Declare Integer c, minInRow = values[row][0]
	For c = 0 To COLS - 1
		If values[row][c] < minInRow Then
			Set minInRow = values[row][c]
		End If
	End For
	Return minInRow
End Function

Function Integer highestInColumn(Integer values[][], Integer col)
	Declare Integer r, maxInCol = values[0][col]
	For r = 0 To ROWS - 1
		If values[r][col] > maxInCol Then
			Set maxInCol = values[r][col]
		End If
	End For
	Return maxInCol
End Function

// This is the module for displaying the reference table.
Module debugPrintTable(Integer values[][])
	Declare Integer row, col

	// Create a buffer of the correct size.
	Declare String buf = ""
	For col = 0 To COLS - 1
		Set buf = append(buf, "0")
	End For
	Display "Below, is the table for reference."
	For row = 0 To ROWS - 1
		For col = 0 To COLS - 1
			// Translate each cell number to the matching character.
			// You can pull individual characters from strings.
			Set buf[col] = digits[values[row][col]]
		End For
		// Displays the entire row of numbers in column order.
		Display buf
	End For
End Module
